window.SIDEBAR_ITEMS = {"mod":[["controller_client","Generated worker implementations."],["controller_server","Generated orchestrator implementations."],["schedule_task","Nested message and enum types in `ScheduleTask`."],["task","Nested message and enum types in `Task`."],["verfploeter_result","Nested message and enum types in `VerfploeterResult`."]],"struct":[["Ack","Acknowledgement of a task, with a boolean whether it was successful or not, and a possible error message."],["Client","A worker, which contains a worker ID, and metadata"],["ClientId","A worker ID"],["ClientList","A list of Client"],["Empty","Empty message"],["IPv4Result","IPv4Result, contains all information extracted from the IPv4 header: source, destination addresses and TTL"],["Metadata","Metadata (as used in Client), contains a hostname"],["Ping","A Ping, which has a single source address and a list of destination addresses"],["PingPayload","PingPayload. The payload of a ping, with task ID, transmission time, source/dest address."],["PingResult","Result of a ping which has a receive time, an ipv4 result, and the ping payload information"],["ScheduleTask","Schedule a task with the Server with a rate (packets/second), can be either a Ping, UDP, or TCP task"],["Task","A task for a Client, with a task ID, the probing rate (probes / second) can be either a Ping, UDP, TCP, or an Empty task"],["TaskId","A task ID"],["TaskResult","A TaskResult, contains the task ID, Client that executed the task, and a list of results"],["Tcp","TCP, which has a single source address and a list of destination addresses"],["TcpResult","TCP result which contains a receive time, source & destination ports, ack and seq, and a receive time"],["Udp","UDP, which has a single source address and a list of destination addresses"],["UdpPayload","UDP payload, which is extracted from the domain of the DNS A Record reply"],["UdpResult","UDP result contains the receive time, source and destination port from the UDP header, an ipv4 result, and a UDP payload"],["VerfploeterResult","A result, either a PingResult, UDPResult, or TCPResult"]]};